[server]
port = 8080
#bind_address = "*"
hostname = "http://10.0.0.179:8080"
data_dir = "/app/data" # Don't change if you run podsync via docker

# Tokens from `Access tokens` section
[tokens]
youtube = "" # YouTube API Key. See https://developers.google.com/youtube/registering_an_application

[feeds]

  [feeds.ACG]
  url = "https://www.youtube.com/playlist?list=PL62tz83FJJjlP-rz4qKNts3Kwf3iwhbpG" # URL address of a channel, group, user, or playlist. 
  page_size = 5 # The number of episodes to query each update (keep in mind, that this might drain API token)
  update_period = "1h" # How often query for updates, examples: "60m", "4h", "2h45m"
  quality = "high" # or "low"
  format = "video" # or "audio"
  # custom.cover_art_quality use "high" or "low" to special cover image quality from channel cover default is equal with "quality" and disable when custom.cover_art was set.
  # custom = { title = "Level1News", description = "News sections of Level1Techs, in a podcast feed!", author = "Level1Tech", cover_art = "{IMAGE_URL}", cover_art_quality = "high", category = "TV", subcategories = ["Documentary", "Tech News"], explicit = true, lang = "en" } # Optional feed customizations
  # max_height = 720 # Optional maximal height of video, example: 720, 1080, 1440, 2160, ...
  # cron_schedule = "@every 1h" # Optional cron expression format. If set then overwrite 'update_period'. See details below
  # filters = { title = "regex for title here", not_title = "regex for negative title match", description = "...", not_description = "..." } # Optional Golang regexp format. If set, then only download matching episodes.
 opml = true # Optional inclusion of the feed in the OPML file (default value: false)
  clean = { keep_last = 5 } # Keep last 5 episodes (order desc by PubDate)
  # youtube_dl_args = [ "--write-sub", "--embed-subs", "--sub-lang", "en,en-US,en-GB" ] # Optional extra arguments passed to youtube-dl when downloading videos from this feed. This example would embed available English closed captions in the videos. Note that setting '--audio-format' for audio format feeds, or '--format' or '--output' for any format may cause unexpected behaviour. You should only use this if you know what you are doing, and have read up on youtube-dl's options!

[database]
  badger = { truncate = true, file_io = true } # See https://github.com/dgraph-io/badger#memory-usage

[downloader]
self_update = true # Optional, auto update youtube-dl every 24 hours
timeout = 15 # Timeout in minutes

# Optional log config. If not specified logs to the stdout
[log]
filename = "podsync.log"
max_size = 50 # MB
max_age = 30 # days
max_backups = 7
compress = true